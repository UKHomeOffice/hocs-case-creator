---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hocs-case-creator
  labels:
    version: {{.VERSION}}
spec:
  replicas: {{.MIN_REPLICAS}}
  selector:
    matchLabels:
      name: hocs-case-creator
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: hocs-case-creator
        role: hocs-backend
        version: {{.VERSION}}
    spec:
      imagePullSecrets:
        - name: registry-credentials
      initContainers:
        - name: truststore
          image: quay.io/ukhomeofficedigital/cfssl-sidekick-jks:v0.0.6
          securityContext:
            runAsNonRoot: true
            capabilities:
              drop:
                - SETUID
                - SETGID
          args:
            - --certs=/certs
            - --command=/usr/bin/create-keystore.sh /certs/tls.pem /certs/tls-key.pem /etc/ssl/certs/acp-root.crt
            - --domain=hocs-case-creator.${KUBE_NAMESPACE}.svc.cluster.local
            - --domain=localhost
            - --onetime=true
          env:
            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: certs
              mountPath: /certs
            - name: keystore
              mountPath: /etc/keystore
            - name: bundle
              mountPath: /etc/ssl/certs
              readOnly: true
          resources:
            limits:
              memory: 64Mi
              cpu: 900m
            requests:
              memory: 16Mi
              cpu: 300m

      containers:
        - name: certs
          image: quay.io/ukhomeofficedigital/cfssl-sidekick:v0.0.6
          securityContext:
            runAsNonRoot: true
            capabilities:
              drop:
                - SETUID
                - SETGID
          args:
            - --certs=/certs
            - --domain=hocs-case-creator.${KUBE_NAMESPACE}.svc.cluster.local
            - --expiry=8760h
            - --command=/usr/local/scripts/trigger_nginx_reload.sh
          env:
            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: certs
              mountPath: /certs
            - name: bundle
              mountPath: /etc/ssl/certs
              readOnly: true
          resources:
            limits:
              memory: 32Mi
              cpu: 400m
            requests:
              memory: 8Mi
              cpu: 100m

        - name: proxy
          image: quay.io/ukhomeofficedigital/nginx-proxy:v3.4.12
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            capabilities:
              drop:
                - SETUID
                - SETGID
          env:
            - name: PROXY_SERVICE_HOST
              value: '127.0.0.1'
            - name: PROXY_SERVICE_PORT
              value: '8080'
            - name: NAXSI_USE_DEFAULT_RULES
              value: 'FALSE'
            - name: ENABLE_UUID_PARAM
              value: 'FALSE'
            - name: HTTPS_REDIRECT
              value: 'FALSE'
            - name: BASIC_AUTH
              value: /etc/nginx/authsecrets/htpasswd
            - name: SERVER_CERT
              value: /certs/tls.pem
            - name: SERVER_KEY
              value: /certs/tls-key.pem
            - name: ADD_NGINX_SERVER_CFG
              value: >
                location = /reload {
                  allow 127.0.0.1;
                  deny all;
                  content_by_lua_block {
                    os.execute("touch /tmp/nginx-reload-triggered;
                      /usr/local/openresty/nginx/sbin/nginx -s reload;
                      touch /tmp/nginx-reload-complete;")
                    }
                 }
          volumeMounts:
            - name: certs
              mountPath: /certs
              readOnly: true
            - name: secrets
              mountPath: /etc/nginx/secrets
              readOnly: true
            - name: auth-secrets
              mountPath: /etc/nginx/authsecrets
              readOnly: true
          ports:
            - name: https
              containerPort: 10443
          resources:
            limits:
              memory: 32Mi
              cpu: 400m
            requests:
              memory: 4Mi
              cpu: 100m

        - name: hocs-case-creator
          image: quay.io/ukhomeofficedigital/hocs-case-creator:{{.VERSION}}
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            capabilities:
              drop:
                - SETUID
                - SETGID
          envFrom:
            - configMapRef:
                name: hocs-queue-config
          env:
            - name: JAVA_OPTS
              value: >
                -Xms768m -Xmx4096m -XX:+UseG1GC -Djavax.net.ssl.trustStore=/etc/keystore/truststore.jks
                -Dhttps.proxyHost=hocs-outbound-proxy.{{.KUBE_NAMESPACE}}.svc.cluster.local
                -Dhttps.proxyPort=31290 
                -Dhttp.nonProxyHosts=*.{{.KUBE_NAMESPACE}}.svc.cluster.local
            - name: JDK_TRUST_FILE
              value: '/etc/keystore/truststore.jks'
            - name: SERVER_PORT
              value: '8080'
            - name: ENDPOINTS_INFO_ENABLED
              value: 'false'
            - name: HOCS_CASE_SERVICE
              value: 'https://hocs-casework.{{.KUBE_NAMESPACE}}.svc.cluster.local'
            - name: HOCS_INFO_SERVICE
              value: 'https://hocs-info-service.{{.KUBE_NAMESPACE}}.svc.cluster.local'
            - name: HOCS_DOCUMENT_SERVICE
              value: 'https://hocs-docs.{{.KUBE_NAMESPACE}}.svc.cluster.local'
            - name: HOCS_BASICAUTH
              valueFrom:
                secretKeyRef:
                  name: ui-casework-creds
                  key: plaintext
            - name: AWS_SQS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{.KUBE_NAMESPACE}}-ukvi-complaint-sqs
                  key: access_key_id
            - name: AWS_SQS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{.KUBE_NAMESPACE}}-ukvi-complaint-sqs
                  key: secret_access_key
          resources:
            limits:
              cpu: 2000m
              memory: 4096Mi
            requests:
              cpu: 400m
              memory: 768Mi
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
              httpHeaders:
                - name: X-probe
                  value: kubelet
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
              httpHeaders:
                - name: X-probe
                  value: kubelet
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /etc/keystore
              name: keystore
              readOnly: true
      volumes:
        - name: keystore
          emptyDir:
            medium: "Memory"
        - name: certs
          emptyDir:
            medium: "Memory"
        - name: bundle
          configMap:
            name: bundle
        - name: secrets
          emptyDir:
            medium: "Memory"
        - name: auth-secrets
          secret:
            secretName: ui-casework-creds
